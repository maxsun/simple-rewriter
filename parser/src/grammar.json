{
  "name": "TestLang",
  "rules": {
    "source_file": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_bool_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_assertion"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-z]+"
    },
    "metavar": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\$"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "num_literal": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "field_lookup": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "PATTERN",
          "value": "\\."
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "field_update": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "field_lookup"
            },
            {
              "type": "SYMBOL",
              "name": "metavar"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "emp": {
      "type": "STRING",
      "value": "emp"
    },
    "singleton_heap": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "PATTERN",
          "value": "->"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "binary_assertion": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_assertion"
              },
              {
                "type": "STRING",
                "value": "*"
              },
              {
                "type": "SYMBOL",
                "name": "_assertion"
              }
            ]
          }
        }
      ]
    },
    "_assertion": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "emp"
        },
        {
          "type": "SYMBOL",
          "name": "singleton_heap"
        },
        {
          "type": "SYMBOL",
          "name": "binary_assertion"
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "while_stmt"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "allocate_expression"
        },
        {
          "type": "SYMBOL",
          "name": "deallocate_expression"
        },
        {
          "type": "SYMBOL",
          "name": "field_lookup"
        },
        {
          "type": "SYMBOL",
          "name": "field_update"
        },
        {
          "type": "SYMBOL",
          "name": "metavar"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "num_literal"
        },
        {
          "type": "SYMBOL",
          "name": "list_expression"
        },
        {
          "type": "SYMBOL",
          "name": "block_expression"
        },
        {
          "type": "SYMBOL",
          "name": "paren_expression"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        }
      ]
    },
    "bool_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "True"
        },
        {
          "type": "STRING",
          "value": "False"
        }
      ]
    },
    "logical_eq_sign": {
      "type": "STRING",
      "value": "=="
    },
    "logical_and_sign": {
      "type": "STRING",
      "value": "&"
    },
    "logical_or_sign": {
      "type": "STRING",
      "value": "|"
    },
    "bool_binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "logical_eq_sign"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_bool_expr"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "metavar"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "logical_and_sign"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "logical_or_sign"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_bool_expr"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "metavar"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "bool_unary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "!"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_bool_expr"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "metavar"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "_bool_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bool_literal"
        },
        {
          "type": "SYMBOL",
          "name": "bool_unary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "bool_binary_expression"
        }
      ]
    },
    "sum_sign": {
      "type": "STRING",
      "value": "+"
    },
    "binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": "*"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_RIGHT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "sum_sign"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "list_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\["
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "\\]"
        }
      ]
    },
    "block_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "PATTERN",
                "value": ";"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "\\}"
        }
      ]
    },
    "allocate_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "new"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "deallocate_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "dispose"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "if_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "block_expression"
        }
      ]
    },
    "while_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "SYMBOL",
          "name": "block_expression"
        }
      ]
    },
    "paren_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\("
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "PATTERN",
          "value": "\\)"
        }
      ]
    },
    "unary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_RIGHT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "!"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

